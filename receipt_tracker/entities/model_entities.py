

class Client(object):
    """Client data.

    Args:
        id (int): Unique serial id generated by the database (primary key).
        name (str): Name of client.
    """

    def __init__(self, id, name):
        self.id = id
        self.name = name

    @classmethod
    def from_dict(cls, dct):
        """Instantiate class from a dictionary.

        Args:
            dct (dict): Client information in the form of a dict.

        Returns: Client instance
        """
        return cls(
            id=dct['id'],
            name=dct['name']
        )

    def to_dict(self):
        """Construct dictionary of Client instance.

        Returns:
            dict: Client information in the form of a dict.
        """
        return {
            'id': self.id,
            'name': self.name
        }


class Business(object):
    """Business data.

    Args:
        id (int): Unique serial id generated by the database (primary key).
        name (str): Name of business/organization.
    """

    def __init__(self, id, name):
        self.id = id
        self.name = name

    @classmethod
    def from_dict(cls, dct):
        """Instantiate class from a dictionary.

        Args:
            dct (dict): Seller information in the form of a dict.

        Returns: Business instance
        """
        return cls(
            id=dct['id'],
            name=dct['name']
        )

    def to_dict(self):
        """Construct dictionary of Business instance.

        Returns:
            dict: Business information in the form of a dict.
        """
        return {
            'id': self.id,
            'name': self.name
        }


class Receipt(object):
    """Receipt data.

    Args:
        id (int): Unique serial id generated by the database (primary key).
        date (datetime): Date of purchase. !! May be interested in converting !!
        business (id): Foreign key from Business class.
        total (float): Cost of purchase.
        client (int): Foreign key from Client class.
        description (str): [Optional] Description of purchase (product, etc).
    """

    def __init__(self, id, date, business, total, client, description=None):
        self.id = id
        self.date = date
        self.business = business
        self.total = total
        self.client = client
        self.description = description

    @classmethod
    def from_dict(cls, dct):
        """Instantiate class from a dictionary.

        Args:
            dct (dict): Receipt information in the form of a dict.

        Returns:
            Receipt: Receipt instance
        """
        return cls(
            id=dct['id'],
            date=dct['date'],
            business=dct['business'],
            total=dct['total'],
            client=dct['client'],
            description=dct.get('description'),
        )

    def to_dict(self):
        """Construct dictionary of Receipt instance.

        Returns:
            dict: Receipt information in the form of a dict.
        """
        return {
            'id': self.id,
            'date': self.date,
            'business': self.business,
            'total': self.total,
            'client': self.client,
            'description': self.description,
        }
